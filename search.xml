<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Nachos 安装</title>
      <link href="/2019/06/18/nachos-an-zhuang/"/>
      <url>/2019/06/18/nachos-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="何为Nachos"><a href="#何为Nachos" class="headerlink" title="何为Nachos"></a>何为Nachos</h1><p>它是一个教学用的操作系统平台，运行在宿主机上，通过编译即可运行。它的源码大部分由C和C++组成，涉及少量的汇编。因为是教学使用，源码中有大量注释，方面理解，同时源码也并不复杂。<br>Nachos已经搭建好了操作系统框架，包括：线程、系统调用、内存管理等等。但是并不完善，诸如线程只能使用4个，内存默认是没有启用TLB快表。这些不完善的地方便是需要自己去学习，扩展，提升的地方。</p><h1 id="Nachos安装"><a href="#Nachos安装" class="headerlink" title="Nachos安装"></a>Nachos安装</h1><p>操作系统环境：Ubuntu 16.04<br>Nachos包：4.1版本</p><h2 id="C语言编译环境搭建"><a href="#C语言编译环境搭建" class="headerlink" title="C语言编译环境搭建"></a>C语言编译环境搭建</h2><p>（1）安装 C与C++编译器</p><p><code>sudo apt-get install build-essential</code></p><p>（2）安装 g++ 和 gcc 多平台库</p><p><code>sudo apt install g++-multilib gcc-multilib</code></p><p>（3）安装 gcc和 g++ 5的版本，并将其切换。</p><p>注：因Ubuntu 16.04自带的7版本环境在编译Nachos时会出现bug，需要将其版本号降下来。</p><pre><code>sudo apt-get install gcc-5 g++-5sudo update-alternative --install /usr/bin/gcc gcc /usr/bin/gcc-5 100sudo update-alternative --install /usr/bin/g++ g++ /usr/bin/g++ -5 100</code></pre><h2 id="Nachos-修改和编译"><a href="#Nachos-修改和编译" class="headerlink" title="Nachos 修改和编译"></a>Nachos 修改和编译</h2><p>（1）解压Nachos后，修改 code/lib/sysdep.h，在头文件后追加：</p><pre class=" language-cpp"><code class="language-cpp"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></code></pre><p>如图所示</p><p><img src="https://res.cloudinary.com/starrkd/image/upload/v1562038988/Blog/Nachos/Install%20and%20complie/add-namespace_lepi0o.png" alt></p><p>(2)建立依赖关系</p><pre class=" language-shell"><code class="language-shell">cd ./code/build.linuxmake depend</code></pre><p>（3）修改Makefile</p><p>删除 203 行的 -fwritable-strings 选项</p><p>改变后变为：</p><p><code>CFLAGS = -ftemplate-depth-100 -Wno-deprecated -g -Wall $(INCPATH) $(DEFINES) $(HOSTCFLAGS) -DCHANGED</code></p><p><img src="https://res.cloudinary.com/starrkd/image/upload/v1562038991/Blog/Nachos/Install%20and%20complie/delet_fwritable-strings_fwtpxa.png" alt></p><p>此时执行make 会报错，出现 error ‘IsInList’</p><p><img src="https://res.cloudinary.com/starrkd/image/upload/v1562038988/Blog/Nachos/Install%20and%20complie/error1_eeyg7x.png" alt></p><p>（4）修改 code/lib/list.cc，将编译中包含 numInList, first, last, IsEmpty(), IsInList 的地方或属性修改为 this-&gt;numInList, this-&gt;first, this-&gt;last, this-&gt;IsEmpty(), this-&gt;IsInList （哪里报错改哪里）</p><p>再次编译，仍然会出现错误，出现 error cast from ‘VoidFunctionPtr’ 。</p><p><img src="https://res.cloudinary.com/starrkd/image/upload/v1562038988/Blog/Nachos/Install%20and%20complie/error2_ensswk.png" alt></p><p>（5）在Makefile 203 行添加选项 -fpermissive 再次执行make，会出现一些汇编的报错。</p><pre><code>switch.s 7:Error invalid instruction suffix for &#39;push&#39;switch.s 9:Error invalid instruction suffix for &#39;push&#39;.........make: *** [switch.o] Error 1</code></pre><p><img src="https://res.cloudinary.com/starrkd/image/upload/v1562038988/Blog/Nachos/Install%20and%20complie/error3_ljoerj.png" alt></p><p>给 g++ 增加编译选项 -m32</p><pre><code>echo ‘/usr/bin/g++ -m32 “$@”’ &gt; /̃g++chmod +x /̃g++export PATH=$HOME:$PATH</code></pre><p>修改 Makefile 203行与210行分别加入选项 -m32 和 –32， 让编译器能够编译汇编32位的代码。</p><p>此时执行 make ， 便可成功编译出 nachos 二进制文件了。成功执行后，命令行代码如下图所示：</p><p><img src="https://res.cloudinary.com/starrkd/image/upload/v1562038988/Blog/Nachos/Install%20and%20complie/done_vuda2a.png" alt></p><p>Nachos的安装算是完成了，但是为了后续实验能正常操作，还需要安装交叉编译环境。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
